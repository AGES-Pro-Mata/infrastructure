#!/bin/bash
# Docker Monitoring Script for Pro-Mata
# This script monitors Docker containers and services

LOG_FILE="/opt/promata/logs/docker-monitor.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

echo "[$TIMESTAMP] Starting Docker monitoring..." >> "$LOG_FILE"

# Check Docker service status
if systemctl is-active --quiet docker; then
    echo "[$TIMESTAMP] Docker service is running" >> "$LOG_FILE"
else
    echo "[$TIMESTAMP] ERROR: Docker service is not running" >> "$LOG_FILE"
    exit 1
fi

# Check running containers
CONTAINER_COUNT=$(docker ps -q | wc -l)
echo "[$TIMESTAMP] Running containers: $CONTAINER_COUNT" >> "$LOG_FILE"

# Check Docker Swarm status if in swarm mode
if docker info --format '{{.Swarm.LocalNodeState}}' | grep -q "active"; then
    echo "[$TIMESTAMP] Docker Swarm is active" >> "$LOG_FILE"

    # Check swarm services
    SERVICE_COUNT=$(docker service ls -q | wc -l)
    echo "[$TIMESTAMP] Swarm services: $SERVICE_COUNT" >> "$LOG_FILE"

    # Check swarm nodes
    NODE_STATUS=$(docker node ls --format "table {{.Hostname}}\t{{.Status}}\t{{.Availability}}")
    echo "[$TIMESTAMP] Swarm nodes status:" >> "$LOG_FILE"
    echo "$NODE_STATUS" >> "$LOG_FILE"
else
    echo "[$TIMESTAMP] Docker Swarm is not active" >> "$LOG_FILE"
fi

# Check disk usage
DISK_USAGE=$(df /var/lib/docker | tail -1 | awk '{print $5}')
echo "[$TIMESTAMP] Docker disk usage: $DISK_USAGE" >> "$LOG_FILE"

# Check Docker images
IMAGE_COUNT=$(docker images -q | wc -l)
echo "[$TIMESTAMP] Docker images: $IMAGE_COUNT" >> "$LOG_FILE"

echo "[$TIMESTAMP] Docker monitoring completed" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"
