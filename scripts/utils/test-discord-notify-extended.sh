#!/bin/bash

# Script para testar as notifica√ß√µes estendidas do Discord
# Usage: ./test-extended-notifications.sh <WEBHOOK_URL>

WEBHOOK_URL="${1:-$DISCORD_WEBHOOK_URL}"

if [[ -z "$WEBHOOK_URL" ]]; then
    echo "‚ùå Erro: URL do webhook n√£o fornecida"
    echo "Usage: $0 <WEBHOOK_URL>"
    echo "Ou configure a vari√°vel DISCORD_WEBHOOK_URL"
    exit 1
fi

echo "üß™ Testando Discord Extended Notifications..."
echo "URL: ${WEBHOOK_URL:0:50}..."
echo ""

# Fun√ß√£o para fazer request e verificar resposta
send_notification() {
    local test_name="$1"
    local payload="$2"
    
    echo -n "üì§ $test_name: "
    
    response=$(curl -s -w "%{http_code}" -X POST "$WEBHOOK_URL" \
        -H "Content-Type: application/json" \
        -d "$payload")
    
    http_code="${response: -3}"
    if [[ "$http_code" == "204" ]]; then
        echo "‚úÖ Sucesso"
    else
        echo "‚ùå Falha (HTTP $http_code)"
        echo "   Response: ${response%???}"
    fi
    
    sleep 2  # Rate limit prevention
}

# Teste 1: Review Aprovado
echo "üîç Testando notifica√ß√µes de REVIEW..."
send_notification "Review Aprovado" '{
    "embeds": [
        {
            "title": "‚úÖ Review: feat: adiciona sistema de autentica√ß√£o",
            "url": "https://github.com/pro-mata/frontend/pull/42",
            "description": "LucasLanti aprovou este PR",
            "color": 65280,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/frontend",
                    "inline": true
                },
                {
                    "name": "Reviewer",
                    "value": "LucasLanti",
                    "inline": true
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

# Teste 2: Review Changes Requested
send_notification "Review Changes Requested" '{
    "embeds": [
        {
            "title": "üîÑ Review: fix: corrige valida√ß√£o de formul√°rio",
            "url": "https://github.com/pro-mata/backend/pull/18",
            "description": "TechLead solicitou altera√ß√µes em este PR",
            "color": 16776960,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/backend",
                    "inline": true
                },
                {
                    "name": "Reviewer",
                    "value": "TechLead",
                    "inline": true
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

echo ""
echo "üêõ Testando notifica√ß√µes de ISSUES..."

# Teste 3: Nova Issue
send_notification "Nova Issue" '{
    "embeds": [
        {
            "title": "üêõ Bug no sistema de reservas",
            "url": "https://github.com/pro-mata/frontend/issues/15",
            "description": "Nova issue criada por UsuarioTeste",
            "color": 16776960,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/frontend",
                    "inline": true
                },
                {
                    "name": "Autor",
                    "value": "UsuarioTeste",
                    "inline": true
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

# Teste 4: Issue Resolvida
send_notification "Issue Resolvida" '{
    "embeds": [
        {
            "title": "‚úÖ Problema de performance no dashboard",
            "url": "https://github.com/pro-mata/backend/issues/23",
            "description": "Issue resolvida por DevTeam",
            "color": 65280,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/backend",
                    "inline": true
                },
                {
                    "name": "Autor",
                    "value": "DevTeam",
                    "inline": true
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

echo ""
echo "üöÄ Testando notifica√ß√µes de DEPLOY..."

# Teste 5: Deploy Sucesso Development
send_notification "Deploy Success (Dev)" '{
    "embeds": [
        {
            "title": "üöÄ Deploy Realizado com Sucesso!",
            "url": "https://github.com/pro-mata/frontend/actions/runs/123456",
            "description": "Workflow **pro-mata/frontend** executado com sucesso",
            "color": 65280,
            "fields": [
                {
                    "name": "Workflow",
                    "value": "Frontend CI/CD Pipeline",
                    "inline": true
                },
                {
                    "name": "Branch",
                    "value": "develop",
                    "inline": true
                },
                {
                    "name": "Status",
                    "value": "success",
                    "inline": true
                },
                {
                    "name": "Ambiente",
                    "value": "Development (Azure)",
                    "inline": true
                },
                {
                    "name": "URL",
                    "value": "[Acessar aplica√ß√£o](https://dev.promata.com.br)",
                    "inline": false
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

# Teste 6: Deploy Falha Production (com mention)
send_notification "Deploy Failure (Prod)" '{
    "content": "<@&1399565960922402929><@&1399580242636701726> **pro-mata/backend**",
    "embeds": [
        {
            "title": "üö® Deploy Falhou!",
            "url": "https://github.com/pro-mata/backend/actions/runs/789012",
            "description": "Workflow **pro-mata/backend** falhou",
            "color": 16711680,
            "fields": [
                {
                    "name": "Workflow",
                    "value": "Deploy Production",
                    "inline": true
                },
                {
                    "name": "Branch",
                    "value": "main",
                    "inline": true
                },
                {
                    "name": "Status",
                    "value": "failure",
                    "inline": true
                },
                {
                    "name": "Ambiente",
                    "value": "Production (AWS)",
                    "inline": true
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

echo ""
echo "üìã Testando notifica√ß√£o de PR CLOSED/MERGED..."

# Teste 7: PR Merged
send_notification "PR Merged" '{
    "embeds": [
        {
            "title": "‚úÖ feat: implementa sistema de autentica√ß√£o",
            "url": "https://github.com/pro-mata/frontend/pull/42",
            "description": "PR foi aprovado e integrado por LucasLanti",
            "color": 65280,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/frontend",
                    "inline": true
                },
                {
                    "name": "Status",
                    "value": "PR Merged com Sucesso!",
                    "inline": true
                },
                {
                    "name": "Branch",
                    "value": "feature/auth ‚Üí develop",
                    "inline": false
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

# Teste 8: PR Fechado sem Merge
send_notification "PR Closed" '{
    "embeds": [
        {
            "title": "‚ùå fix: tentativa de corre√ß√£o que n√£o funcionou",
            "url": "https://github.com/pro-mata/backend/pull/18",
            "description": "PR foi fechado sem integra√ß√£o por Developer",
            "color": 16711680,
            "fields": [
                {
                    "name": "Reposit√≥rio",
                    "value": "pro-mata/backend",
                    "inline": true
                },
                {
                    "name": "Status",
                    "value": "PR Fechado sem Merge",
                    "inline": true
                },
                {
                    "name": "Branch",
                    "value": "bugfix/broken-feature ‚Üí main",
                    "inline": false
                }
            ],
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
        }
    ]
}'

echo ""
echo "üéØ Resumo dos Testes (SEM duplicar o notify-pr.yml):"
echo "‚úÖ Reviews (aprovado/changes requested/coment√°rios)"
echo "‚úÖ Issues (abertura/fechamento)"  
echo "‚úÖ PR Status (closed/merged - complementa o opened do colega)"
echo "‚úÖ Workflows/Deploy (sucesso/falha com ambiente)"
echo ""
echo "üîç Verifica√ß√µes no Discord:"
echo "1. Notifica√ß√µes complementares apareceram junto com as do notify-pr.yml?"
echo "2. N√£o h√° duplica√ß√£o de PR opened (s√≥ o arquivo do colega deve notificar)?"
echo "3. Reviews e deploys est√£o sendo notificados?"
echo "4. As mentions aparecem s√≥ em falhas cr√≠ticas?"
echo ""
echo "üìã Testes reais recomendados:"
echo "1. Abra um PR (deve notificar via notify-pr.yml do colega)"
echo "2. Fa√ßa review nesse PR (deve notificar via extended)"
echo "3. Merge o PR (deve notificar merge via extended)"
echo "4. Crie/feche issue (deve notificar via extended)"
echo "5. Fa√ßa deploy (deve notificar workflow via extended)"
echo ""
echo "üí° Agora s√£o DOIS workflows trabalhando juntos:"
echo "   üìù notify-pr.yml: PR opened/reopened/ready_for_review"
echo "   ‚öôÔ∏è extended: Reviews, Issues, PR status, Workflows"