# Monitoring Role - Pro-Mata Infrastructure
---
- name: Install monitoring tools
  apt:
    name:
      - htop
      - iotop
      - nethogs
      - ncdu
      - tree
      - jq
      - curl
    state: present
    update_cache: yes

- name: Create monitoring directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - /opt/promata/monitoring
    - /opt/promata/logs
    - /var/log/promata

- name: Configure log rotation for promata logs
  template:
    src: promata-logrotate.j2
    dest: /etc/logrotate.d/promata
    mode: '0644'

- name: Install Docker monitoring script
  copy:
    content: |
      #!/bin/bash
      # Docker Monitoring Script for Pro-Mata
      # This script monitors Docker containers and services
      
      LOG_FILE="/opt/promata/logs/docker-monitor.log"
      TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
      
      echo "[$TIMESTAMP] Starting Docker monitoring..." >> "$LOG_FILE"
      
      # Check Docker service status
      if systemctl is-active --quiet docker; then
          echo "[$TIMESTAMP] Docker service is running" >> "$LOG_FILE"
      else
          echo "[$TIMESTAMP] ERROR: Docker service is not running" >> "$LOG_FILE"
          exit 1
      fi
      
      # Check running containers
      CONTAINER_COUNT=$(docker ps -q | wc -l)
      echo "[$TIMESTAMP] Running containers: $CONTAINER_COUNT" >> "$LOG_FILE"
      
      # Check Docker Swarm status if in swarm mode
      if docker info --format '{{ "{{ .Swarm.LocalNodeState }}" }}' | grep -q "active"; then
          echo "[$TIMESTAMP] Docker Swarm is active" >> "$LOG_FILE"
      
          # Check swarm services
          SERVICE_COUNT=$(docker service ls -q | wc -l)
          echo "[$TIMESTAMP] Swarm services: $SERVICE_COUNT" >> "$LOG_FILE"
      
          # Check swarm nodes
          NODE_STATUS=$(docker node ls --format "table {{ "{{ .Hostname }}" }}\t{{ "{{ .Status }}" }}\t{{ "{{ .Availability }}" }}")
          echo "[$TIMESTAMP] Swarm nodes status:" >> "$LOG_FILE"
          echo "$NODE_STATUS" >> "$LOG_FILE"
      else
          echo "[$TIMESTAMP] Docker Swarm is not active" >> "$LOG_FILE"
      fi
      
      # Check disk usage
      DISK_USAGE=$(df /var/lib/docker | tail -1 | awk '{print $5}')
      echo "[$TIMESTAMP] Docker disk usage: $DISK_USAGE" >> "$LOG_FILE"
      
      # Check Docker images
      IMAGE_COUNT=$(docker images -q | wc -l)
      echo "[$TIMESTAMP] Docker images: $IMAGE_COUNT" >> "$LOG_FILE"
      
      echo "[$TIMESTAMP] Docker monitoring completed" >> "$LOG_FILE"
      echo "" >> "$LOG_FILE"
    dest: /opt/promata/monitoring/docker-monitor.sh
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Install system health check script
  template:
    src: health-check.sh.j2
    dest: /opt/promata/monitoring/health-check.sh
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Configure cron jobs for monitoring
  cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour | default('*') }}"
    job: "{{ item.job }}"
    user: "{{ ansible_user }}"
  loop:
    - name: "Docker health check"
      minute: "*/5"
      job: "/opt/promata/monitoring/docker-monitor.sh >> /var/log/promata/docker-monitor.log 2>&1"
    - name: "System health check"
      minute: "*/10"
      job: "/opt/promata/monitoring/health-check.sh >> /var/log/promata/health-check.log 2>&1"
    - name: "Log cleanup"
      minute: "0"
      hour: "2"
      job: "find /var/log/promata -name '*.log' -mtime +7 -delete"

- name: Install fail2ban for basic security
  apt:
    name: fail2ban
    state: present

- name: Configure fail2ban
  template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    backup: yes
  notify: restart fail2ban

- name: Start and enable fail2ban
  systemd:
    name: fail2ban
    state: started
    enabled: yes

- name: Configure UFW firewall
  ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Allow SSH
  ufw:
    rule: allow
    port: '22'
    proto: tcp

- name: Allow HTTP
  ufw:
    rule: allow
    port: '80'
    proto: tcp

- name: Allow HTTPS
  ufw:
    rule: allow
    port: '443'
    proto: tcp

- name: Allow Traefik Dashboard
  ufw:
    rule: allow
    port: '8080'
    proto: tcp

- name: Allow Docker Swarm ports
  ufw:
    rule: allow
    port: "{{ item }}"
    src: "10.1.0.0/16"
  loop:
    - '2377'  # Swarm management
    - '7946'  # Network discovery
    - '4789'  # Overlay network

- name: Create monitoring summary script
  template:
    src: monitoring-summary.sh.j2
    dest: /opt/promata/monitoring/summary.sh
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Display monitoring setup
  debug:
    msg:
      - "Monitoring configured successfully"
      - "Health checks: every 5 minutes"
      - "Log rotation: configured"
      - "Firewall: enabled with required ports"
      - "Fail2ban: enabled for SSH protection"