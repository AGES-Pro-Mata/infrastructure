# Traefik Proxy Stack with Cloudflare Integration
# Pro-Mata Infrastructure
version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    command:
      # Enable Docker Swarm provider (v3.0 syntax)
      - --providers.swarm=true
      - --providers.swarm.exposedbydefault=false
      - --providers.swarm.network=promata_public
      
      # Entrypoints (ports)
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      
      # Certificate management with Let's Encrypt DNS-01 challenge
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      
      # Cloudflare credentials for DNS challenge
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      
      # HTTP to HTTPS redirect
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      
      # API and Dashboard
      - --api.dashboard=true
      - --api.insecure=false
      
      # Logging
      - --log.level=${TRAEFIK_LOG_LEVEL}
      - --accesslog=true
      
      # Metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addserviceslabels=true
      
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
        
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
      
    networks:
      - promata_public
      
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      labels:
        # Traefik dashboard
        - traefik.enable=true
        - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN_NAME}`)
        - traefik.http.routers.dashboard.tls=true
        - traefik.http.routers.dashboard.tls.certresolver=letsencrypt
        - traefik.http.routers.dashboard.service=api@internal
        - traefik.http.routers.dashboard.middlewares=auth
        
        # Dashboard authentication
        - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH_USERS}
        
        # Dashboard service (API port)
        - traefik.http.services.dashboard.loadbalancer.server.port=8080

    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_TOKEN}

volumes:
  traefik_letsencrypt:
    driver: local

networks:
  promata_public:
    external: true
