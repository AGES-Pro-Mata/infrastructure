# Simplified Application Stack for Cloudflare Direct Integration
# No Traefik - uses direct port exposure + Cloudflare SSL
version: '3.8'

services:
  # Backend API
  api:
    image: ${BACKEND_IMAGE}
    environment:
      NODE_ENV: ${ENVIRONMENT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      CORS_ORIGIN: https://${DOMAIN_NAME}
    networks:
      - promata_internal
      - promata_public
    ports:
      - "3000:3000"  # Direct port exposure
    deploy:
      replicas: ${BACKEND_REPLICAS}
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    image: ${FRONTEND_IMAGE}
    environment:
      REACT_APP_API_URL: https://api.${DOMAIN_NAME}
      REACT_APP_ENVIRONMENT: ${ENVIRONMENT}
    networks:
      - promata_public
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS (if handling SSL in container)
    deploy:
      replicas: ${FRONTEND_REPLICAS}
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching/sessions
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${JWT_SECRET}
    volumes:
      - redis_data:/data
    networks:
      - promata_internal
    deploy:
      placement:
        constraints:
          - node.labels.database.primary == true
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  redis_data:
    driver: local

networks:
  promata_public:
    external: true
  promata_internal:
    external: true
