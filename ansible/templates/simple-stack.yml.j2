version: "3.8"

services:
  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - promata_public
    deploy:
      placement:
        constraints: [node.role == manager]

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB={{ postgres_db }}
      - POSTGRES_USER={{ postgres_user }}
      - POSTGRES_PASSWORD={{ postgres_password }}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - promata_database
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  frontend:
    image: {{ frontend_image }}
    networks:
      - promata_public
    deploy:
      replicas: {{ frontend_replicas }}
      labels:
        - traefik.enable=true
        - traefik.docker.network=promata_public
        - traefik.http.routers.frontend.rule=Host(`{{ domain_name }}`)
        - traefik.http.routers.frontend.entrypoints=web
        - traefik.http.services.frontend.loadbalancer.server.port=80

  backend:
    image: {{ backend_image }}
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://{{ postgres_user }}:{{ postgres_password }}@postgres:5432/{{ postgres_db }}
      - JWT_SECRET={{ jwt_secret }}
      - CORS_ORIGIN=http://{{ domain_name }}
    networks:
      - promata_public
      - promata_database
    depends_on:
      - postgres
    deploy:
      replicas: {{ backend_replicas }}
      labels:
        - traefik.enable=true
        - traefik.docker.network=promata_public
        - traefik.http.routers.backend.rule=Host(`api.{{ domain_name }}`)
        - traefik.http.routers.backend.entrypoints=web
        - traefik.http.services.backend.loadbalancer.server.port=3000

volumes:
  postgres_data:

networks:
  promata_public:
    external: true
  promata_database:
    external: true