#cloud-config
# Cloud-init for Pro-Mata Swarm Worker

users:
  - name: promata
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: [docker, sudo]

package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - curl
  - wget
  - htop
  - ncdu

runcmd:
  # Docker setup
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker promata
  
  # Install Docker Compose v2
  - curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  
  # Create directories
  - mkdir -p /opt/promata/{logs,data}
  - chown -R promata:promata /opt/promata
  
  # Set timezone
  - timedatectl set-timezone America/Sao_Paulo
  
  # Create swap file
  - fallocate -l 2G /swapfile
  - chmod 600 /swapfile
  - mkswap /swapfile
  - swapon /swapfile
  - echo '/swapfile none swap sw 0 0' >> /etc/fstab
  
  # Add node labels for database placement
  - echo 'database.primary=false' > /opt/promata/.node-labels
  - echo 'database.replica=true' >> /opt/promata/.node-labels
  
  # Create ready marker
  - touch /opt/promata/.cloud-init-done
  
write_files:
  - path: /opt/promata/scripts/node-ready.sh
    permissions: '0755'
    owner: promata:promata
    content: |
      #!/bin/bash
      echo "🔧 Pro-Mata Swarm Worker Node Ready"
      echo "📅 Initialized: $(date)"
      echo "🐳 Docker: $(docker --version)"
      echo "💾 Memory: $(free -h | grep Mem | awk '{print $2}')"
      echo "💽 Disk: $(df -h / | tail -1 | awk '{print $4}')"
      
  - path: /etc/docker/daemon.json
    permissions: '0644'
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2"
      }

final_message: |
  Pro-Mata Swarm Worker is ready!
  
  Node info:
  - Role: Docker Swarm Worker
  - User: promata
  - Docker: Installed and running
  - Labels: database.replica=true
  
  Next steps:
  1. Will be joined to swarm by Ansible
  2. Will run database replica + application services