#!/bin/bash
# Pro-Mata Stack Deployment Script
# Generated by Ansible for {{ env }} environment

set -e

ENV="{{ env }}"
STACK_DIR="/opt/promata/stacks"
DOMAIN="{{ domain_name }}"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() { echo -e "${GREEN}[$(date +'%H:%M:%S')]${NC} $1"; }
warn() { echo -e "${YELLOW}[$(date +'%H:%M:%S')]${NC} $1"; }
error() { echo -e "${RED}[$(date +'%H:%M:%S')]${NC} $1"; exit 1; }

# Load environment
if [[ -f "$STACK_DIR/.env" ]]; then
    source "$STACK_DIR/.env"
else
    error "Environment file not found: $STACK_DIR/.env"
fi

# Deploy complete stack
deploy_complete_stack() {
    log "🚀 Deploying Pro-Mata complete stack..."
    
    cd "$STACK_DIR"
    
    if docker stack deploy -c promata-complete.yml promata-complete; then
        log "✅ Stack deployed successfully"
    else
        error "❌ Stack deployment failed"
    fi
}

# Check health
check_health() {
    log "🔍 Checking stack health..."
    
    # Wait for services to start
    sleep 30
    
    # Check if services are running
    local failed_services
    failed_services=$(docker service ls --filter "label=com.docker.stack.namespace=promata-complete" --format "{{.Name}} {{.Replicas}}" | grep "0/" | wc -l)
    
    if [[ $failed_services -eq 0 ]]; then
        log "✅ All services are healthy"
    else
        warn "⚠️  $failed_services services are not ready yet"
    fi
    
    # Show service status
    docker service ls --filter "label=com.docker.stack.namespace=promata-complete"
}

# Show access information
show_info() {
    log "📋 Access Information:"
    log "🌐 Frontend: https://$DOMAIN"
    log "🔧 API: https://api.$DOMAIN"
    log "📊 Traefik Dashboard: https://traefik.$DOMAIN"
    log "🗄️  PgAdmin: https://pgadmin.$DOMAIN"
    log "📈 Grafana: https://grafana.$DOMAIN"
}

# Main execution
main() {
    log "🚀 Starting Pro-Mata deployment for $ENV environment"
    
    deploy_complete_stack
    check_health
    show_info
    
    log "🎉 Deployment completed!"
}

main "$@"
