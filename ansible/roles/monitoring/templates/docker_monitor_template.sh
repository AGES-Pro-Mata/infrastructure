#!/bin/bash
# Docker Monitoring Script - Generated by Ansible
# Pro-Mata Infrastructure

TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
LOG_FILE="/var/log/promata/docker-monitor.log"

# Check if running on swarm manager
if ! docker node ls >/dev/null 2>&1; then
    echo "[$TIMESTAMP] Not a swarm manager, skipping monitoring" >> "$LOG_FILE"
    exit 0
fi

echo "[$TIMESTAMP] === Docker Health Check ===" >> "$LOG_FILE"

# Check Docker daemon
if ! docker info >/dev/null 2>&1; then
    echo "[$TIMESTAMP] ERROR: Docker daemon not responding" >> "$LOG_FILE"
    exit 1
fi

# Check swarm status
SWARM_STATUS=$(docker info --format '{{.Swarm.LocalNodeState}}')
if [ "$SWARM_STATUS" != "active" ]; then
    echo "[$TIMESTAMP] WARNING: Swarm not active (status: $SWARM_STATUS)" >> "$LOG_FILE"
fi

# Check services
echo "[$TIMESTAMP] Service Status:" >> "$LOG_FILE"
docker service ls --format "table {{.Name}}\t{{.Replicas}}" >> "$LOG_FILE"

# Check for failed services
FAILED_SERVICES=$(docker service ls --filter "desired-state=running" --format "{{.Name}} {{.Replicas}}" | grep "0/")
if [ -n "$FAILED_SERVICES" ]; then
    echo "[$TIMESTAMP] WARNING: Failed services detected:" >> "$LOG_FILE"
    echo "$FAILED_SERVICES" >> "$LOG_FILE"
fi

# Check disk usage
DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -gt 85 ]; then
    echo "[$TIMESTAMP] WARNING: High disk usage: ${DISK_USAGE}%" >> "$LOG_FILE"
fi

# Check memory usage  
MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100}')
if [ "$MEMORY_USAGE" -gt 85 ]; then
    echo "[$TIMESTAMP] WARNING: High memory usage: ${MEMORY_USAGE}%" >> "$LOG_FILE"
fi

# Check container health
UNHEALTHY_CONTAINERS=$(docker ps --filter "health=unhealthy" --format "{{.Names}}")
if [ -n "$UNHEALTHY_CONTAINERS" ]; then
    echo "[$TIMESTAMP] WARNING: Unhealthy containers:" >> "$LOG_FILE"
    echo "$UNHEALTHY_CONTAINERS" >> "$LOG_FILE"
fi

echo "[$TIMESTAMP] Health check completed" >> "$LOG_FILE"