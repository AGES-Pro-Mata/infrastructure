version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: promata_dev
      POSTGRES_USER: promata_user
      POSTGRES_PASSWORD: promata_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - promata_network

  # Backend (Spring Boot)
  backend:
    image: norohim/pro-mata-backend:latest
    build:
      context: ../../pro-mata-backend
      dockerfile: Dockerfile.dev
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATABASE_URL: jdbc:postgresql://postgres:5432/promata_dev
      DATABASE_USERNAME: promata_user
      DATABASE_PASSWORD: promata_pass
      JWT_SECRET: your-jwt-secret-key-for-dev
      EMAIL_SERVICE_URL: http://mailhog:8025
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    volumes:
      - ../../pro-mata-backend:/app
      - backend_cache:/app/.cache
    depends_on:
      - postgres
      - mailhog
    networks:
      - promata_network
    command: ["./gradlew", "bootRun", "--args='--spring.profiles.active=dev'"]

  # Frontend (React + Vite)
  frontend:
    image: norohim/pro-mata-frontend:latest
    build:
      context: ../../pro-mata-frontend
      dockerfile: Dockerfile.dev
    environment:
      VITE_API_URL: http://localhost:8080/api
      VITE_APP_TITLE: Pro-Mata Development
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ../../pro-mata-frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - promata_network
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@promata.dev
      PGLADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - promata_network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI
    networks:
      - promata_network

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - promata_network

networks:
  promata_network:
    driver: bridge

volumes:
  postgres_data:
  pgladmin_data:
  redis_data:
  backend_cache:
  frontend_node_modules: