# Deploy Configuration Files Task
---
- name: Create config directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - /opt/promata/configs
    - /opt/promata/configs/postgresql
    - /opt/promata/configs/postgresql/primary
    - /opt/promata/configs/postgresql/replica
    - /opt/promata/configs/pgbouncer
    - /opt/promata/configs/traefik
    - /opt/promata/configs/pgadmin

- name: Deploy PostgreSQL primary configuration
  template:
    src: "{{ item.src }}"
    dest: "/opt/promata/configs/postgresql/primary/{{ item.dest }}"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - { src: "postgresql.conf.j2", dest: "postgresql.conf" }
    - { src: "pg_hba.conf.j2", dest: "pg_hba.conf" }

- name: Deploy PostgreSQL initialization script
  template:
    src: init-replication.sh.j2
    dest: /opt/promata/configs/postgresql/init-replication.sh
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Deploy PgBouncer configuration
  template:
    src: "{{ item.src }}"
    dest: "/opt/promata/configs/pgbouncer/{{ item.dest }}"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - { src: "pgbouncer.ini.j2", dest: "pgbouncer.ini" }
    - { src: "userlist.txt.j2", dest: "userlist.txt" }

- name: Deploy PgAdmin servers configuration
  template:
    src: pgadmin-servers.json.j2
    dest: /opt/promata/configs/pgadmin/servers.json
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Deploy Traefik dynamic configuration
  template:
    src: traefik-dynamic.yml.j2
    dest: /opt/promata/configs/traefik/dynamic.yml
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Set proper permissions for config files
  file:
    path: /opt/promata/configs
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    recurse: yes