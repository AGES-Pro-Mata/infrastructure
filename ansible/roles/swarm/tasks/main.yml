# Swarm Role - Pro-Mata Infrastructure
---
- name: Check if Docker Swarm is already initialized
  docker_swarm_info:
  register: swarm_info
  ignore_errors: yes

- name: Initialize Docker Swarm on manager
  docker_swarm:
    state: present
    listen_addr: "{{ ansible_default_ipv4.address }}"
    advertise_addr: "{{ ansible_default_ipv4.address }}"
  when: 
    - inventory_hostname in groups['managers']
    - swarm_info.failed or not swarm_info.swarm_facts.LocalNodeState == "active"
  register: swarm_init_result

- name: Get swarm join tokens
  docker_swarm_info:
  register: swarm_facts
  when: inventory_hostname in groups['managers']

- name: Set join tokens as facts
  set_fact:
    worker_join_token: "{{ swarm_facts.swarm_facts.JoinTokens.Worker }}"
    manager_join_token: "{{ swarm_facts.swarm_facts.JoinTokens.Manager }}"
  when: inventory_hostname in groups['managers']

- name: Join worker nodes to swarm
  docker_swarm:
    state: join
    join_token: "{{ hostvars[groups['managers'][0]]['worker_join_token'] }}"
    remote_addrs: "{{ hostvars[groups['managers'][0]]['ansible_default_ipv4']['address'] }}:2377"
  when: 
    - inventory_hostname in groups['workers']
    - swarm_info.failed or not swarm_info.swarm_facts.LocalNodeState == "active"

- name: Wait for swarm to be ready
  pause:
    seconds: 10
  when: swarm_init_result is changed

- name: Create overlay networks
  docker_network:
    name: "{{ item.name }}"
    driver: overlay
    attachable: yes
    scope: swarm
  loop:
    - { name: "promata_public" }
    - { name: "promata_internal" } 
    - { name: "promata_database" }
  when: inventory_hostname in groups['managers']

- name: Add labels to manager nodes
  docker_node:
    hostname: "{{ inventory_hostname }}"
    labels:
      database.primary: "true"
      database.replica: "false"
      node.type: "manager"
      traefik.enable: "true"
  when: inventory_hostname in groups['managers']

- name: Add labels to worker nodes
  docker_node:
    hostname: "{{ inventory_hostname }}"
    labels:
      database.primary: "false"
      database.replica: "true"
      node.type: "worker"
  delegate_to: "{{ groups['managers'][0] }}"
  when: inventory_hostname in groups['workers']

- name: Verify swarm status
  docker_node:
  register: node_info
  when: inventory_hostname in groups['managers']

- name: Display swarm information
  debug:
    msg: 
      - "Swarm initialized successfully"
      - "Manager: {{ groups['managers'][0] }}"
      - "Workers: {{ groups['workers'] }}"
      - "Networks created: promata_public, promata_internal, promata_database"
  when: inventory_hostname in groups['managers']