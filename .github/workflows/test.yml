name: Quick Tests

on:
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        run: |
          # Install Terraform
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install -y terraform
          
          # Install Ansible
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install -y ansible
          
          # Install make
          sudo apt install -y make

      - name: Validate Terraform
        run: |
          # Validate Terraform files, but skip backends directory (has multiple backend configs)
          find . -name "*.tf" -type f | while read -r file; do
            dir=$(dirname "$file")
            
            # Skip backends directory as it contains multiple backend configurations
            if [[ "$dir" == *"/iac/backends"* ]] || [[ "$dir" == "./iac/backends" ]]; then
              echo "Skipping $dir (contains multiple backend configurations)"
              continue
            fi
            
            # Skip if directory has .terraform-validation-skip file
            if [[ -f "$dir/.terraform-validation-skip" ]]; then
              echo "Skipping $dir (has .terraform-validation-skip file)"
              continue
            fi
            
            echo "Validating Terraform in $dir"
            (cd "$dir" && terraform init -backend=false && terraform validate)
          done

      - name: Validate Ansible
        run: |
          # Validate Ansible playbooks directly
          find . -name "*.yml" -path "*/ansible/*" -type f | while read -r file; do
            echo "Validating Ansible playbook: $file"
            ansible-playbook --syntax-check "$file" || echo "Skipping $file (not a playbook)"
          done

      - name: Check Makefile Targets
        run: |
          if [ -f "Makefile" ]; then
            echo "Available Makefile targets:"
            make help || make -qp | awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {split($1,A,/ /);for(i in A)print A[i]}' | sort
          else
            echo "No Makefile found"
          fi

      - name: Basic File Structure Check
        run: |
          echo "Checking project structure..."
          
          # Check for essential directories
          required_dirs=("iac" "cac" "scripts" "envs")
          for dir in "${required_dirs[@]}"; do
            if [ -d "$dir" ]; then
              echo "✅ Directory $dir exists"
            else
              echo "⚠️  Directory $dir missing"
            fi
          done
          
          # Check for essential files
          required_files=("Makefile" "README.md")
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ File $file exists"
            else
              echo "⚠️  File $file missing"
            fi
          done