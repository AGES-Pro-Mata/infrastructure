name: Docker Hub Webhook Handler

on:
  # GitHub webhook endpoint that Docker Hub will call
  repository_dispatch:
    types: [docker-hub-webhook]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  process-webhook:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.webhook.outputs.should_deploy }}
      image_type: ${{ steps.webhook.outputs.image_type }}
      image_tag: ${{ steps.webhook.outputs.image_tag }}
      repository_name: ${{ steps.webhook.outputs.repository_name }}
    
    steps:
      - name: Process Docker Hub Webhook
        id: webhook
        run: |
          echo "🐳 Processing Docker Hub webhook..."
          
          # Extract webhook payload data
          REPO_NAME="${{ github.event.client_payload.repository.repo_name }}"
          PUSHED_TAG="${{ github.event.client_payload.push_data.tag }}"
          PUSHER="${{ github.event.client_payload.push_data.pusher }}"
          
          echo "Repository: $REPO_NAME"
          echo "Tag: $PUSHED_TAG"
          echo "Pusher: $PUSHER"
          
          # Check if this is a development image with 'latest' tag
          if [[ "$REPO_NAME" == "norohim/pro-mata-backend-dev" ]] && [[ "$PUSHED_TAG" == "latest" ]]; then
            echo "✅ Backend dev image with latest tag detected"
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "image_type=backend" >> $GITHUB_OUTPUT
            echo "image_tag=latest" >> $GITHUB_OUTPUT
            echo "repository_name=$REPO_NAME" >> $GITHUB_OUTPUT
          elif [[ "$REPO_NAME" == "norohim/pro-mata-frontend-dev" ]] && [[ "$PUSHED_TAG" == "latest" ]]; then
            echo "✅ Frontend dev image with latest tag detected"
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "image_type=frontend" >> $GITHUB_OUTPUT
            echo "image_tag=latest" >> $GITHUB_OUTPUT
            echo "repository_name=$REPO_NAME" >> $GITHUB_OUTPUT
          elif [[ "$REPO_NAME" == "norohim/pro-mata-migration-dev" ]] && [[ "$PUSHED_TAG" == "latest" ]]; then
            echo "✅ Migration dev image with latest tag detected"
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "image_type=migration" >> $GITHUB_OUTPUT
            echo "image_tag=latest" >> $GITHUB_OUTPUT
            echo "repository_name=$REPO_NAME" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ Image doesn't match dev deployment criteria"
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Log Webhook Details
        run: |
          echo "## 🐳 Docker Hub Webhook Received" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ steps.webhook.outputs.repository_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ steps.webhook.outputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Type**: ${{ steps.webhook.outputs.image_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Should Deploy**: ${{ steps.webhook.outputs.should_deploy }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

  trigger-deployment:
    needs: process-webhook
    if: needs.process-webhook.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Development Deployment
        run: |
          echo "🚀 Triggering automatic deployment for dev environment..."
          
          # Determine which images to use
          if [[ "${{ needs.process-webhook.outputs.image_type }}" == "backend" ]]; then
            BACKEND_TAG="latest"
            # Get the latest frontend tag
            FRONTEND_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/norohim/pro-mata-frontend-dev/tags/" | jq -r '.results[0].name')
          elif [[ "${{ needs.process-webhook.outputs.image_type }}" == "migration" ]]; then
            # For migration updates, redeploy with current latest tags
            BACKEND_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/norohim/pro-mata-backend-dev/tags/" | jq -r '.results[0].name')
            FRONTEND_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/norohim/pro-mata-frontend-dev/tags/" | jq -r '.results[0].name')
          else
            FRONTEND_TAG="latest"
            # Get the latest backend tag
            BACKEND_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/norohim/pro-mata-backend-dev/tags/" | jq -r '.results[0].name')
          fi
          
          echo "Backend tag: $BACKEND_TAG"
          echo "Frontend tag: $FRONTEND_TAG"
          
          # Dispatch to main CI/CD workflow
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{
              "event_type": "docker-hub-auto-deploy",
              "client_payload": {
                "environment": "dev",
                "backend_tag": "'$BACKEND_TAG'",
                "frontend_tag": "'$FRONTEND_TAG'",
                "trigger_source": "docker_hub_webhook",
                "updated_image": "${{ needs.process-webhook.outputs.image_type }}",
                "repository_name": "${{ needs.process-webhook.outputs.repository_name }}",
                "timestamp": "'$(date -u '+%Y-%m-%d %H:%M:%S UTC')'"
              }
            }'

      - name: Notify Discord - Auto Deployment Started
        run: |
          echo "📢 Sending Discord notification..."
          
          WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"
          if [[ -n "$WEBHOOK_URL" ]]; then
            curl -X POST "$WEBHOOK_URL" \
              -H "Content-Type: application/json" \
              -d '{
                "embeds": [{
                  "title": "🤖 Auto-Deployment Triggered",
                  "description": "Docker Hub webhook detected new `latest` tag",
                  "color": 3447003,
                  "fields": [
                    {
                      "name": "📦 Updated Image",
                      "value": "`${{ needs.process-webhook.outputs.repository_name }}`",
                      "inline": true
                    },
                    {
                      "name": "🏷️ Tag",
                      "value": "`${{ needs.process-webhook.outputs.image_tag }}`",
                      "inline": true
                    },
                    {
                      "name": "🌍 Environment",
                      "value": "`dev`",
                      "inline": true
                    },
                    {
                      "name": "⚡ Trigger",
                      "value": "Automatic via Docker Hub webhook",
                      "inline": false
                    }
                  ],
                  "timestamp": "'$(date -u '+%Y-%m-%dT%H:%M:%S.000Z')'"
                }]
              }' || echo "Failed to send Discord notification"
          else
            echo "Discord webhook URL not configured"
          fi

  notify-ignored:
    needs: process-webhook
    if: needs.process-webhook.outputs.should_deploy == 'false'
    runs-on: ubuntu-latest
    
    steps:
      - name: Log Ignored Webhook
        run: |
          echo "ℹ️ Docker Hub webhook received but ignored"
          echo "Repository: ${{ github.event.client_payload.repository.repo_name }}"
          echo "Tag: ${{ github.event.client_payload.push_data.tag }}"
          echo "Reason: Not a dev image with 'latest' tag"
          
          echo "## ℹ️ Webhook Ignored" >> $GITHUB_STEP_SUMMARY
          echo "Docker Hub webhook was received but ignored because it doesn't match our deployment criteria:" >> $GITHUB_STEP_SUMMARY
          echo "- Repository: \`${{ github.event.client_payload.repository.repo_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Tag: \`${{ github.event.client_payload.push_data.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Criteria**: Only \`norohim/pro-mata-*-dev:latest\` images trigger auto-deployment" >> $GITHUB_STEP_SUMMARY
