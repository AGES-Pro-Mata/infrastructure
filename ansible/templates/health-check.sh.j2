#!/bin/bash
# Pro-Mata Health Check Script
# Generated by Ansible

set -euo pipefail

DOMAIN="{{ domain_name }}"
API_DOMAIN="api.{{ domain_name }}"

echo "🏥 Pro-Mata Health Check"
echo "========================"

# Function to check URL
check_url() {
    local url=$1
    local name=$2
    local expected_code=${3:-200}
    
    echo -n "Checking $name... "
    if response=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$url" 2>/dev/null); then
        if [ "$response" -eq "$expected_code" ]; then
            echo "✅ OK (HTTP $response)"
            return 0
        else
            echo "❌ FAIL (HTTP $response, expected $expected_code)"
            return 1
        fi
    else
        echo "❌ FAIL (Connection error)"
        return 1
    fi
}

# Function to check database
check_database() {
    echo -n "Checking database connection... "
    if docker service ps promata-database_postgres-primary --format "{{.CurrentState}}" | grep -q "Running"; then
        if docker exec $(docker ps -q -f name=promata-database_postgres-primary) pg_isready -U {{ postgres_user }} -d {{ postgres_db }} >/dev/null 2>&1; then
            echo "✅ OK"
            return 0
        else
            echo "❌ FAIL (Database not ready)"
            return 1
        fi
    else
        echo "❌ FAIL (Service not running)"
        return 1
    fi
}

# Function to check Docker services
check_services() {
    echo ""
    echo "📊 Docker Services Status:"
    echo "=========================="
    docker service ls --format "table {{.Name}}\t{{.Replicas}}\t{{.Image}}"
    echo ""
}

# Main health checks
echo ""
echo "🌐 Web Services:"
echo "==============="

check_url "https://$DOMAIN" "Frontend"
check_url "https://$API_DOMAIN/health" "Backend API"
check_url "https://traefik.$DOMAIN/ping" "Traefik" 200

echo ""
echo "💾 Database Services:"
echo "==================="

check_database

# Service status
check_services

# Resource usage
echo "💻 Resource Usage:"
echo "=================="
echo "Memory:"
docker system df
echo ""
echo "Top containers by memory:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" | head -10

echo ""
echo "📈 Quick Stats:"
echo "=============="
echo "Total services: $(docker service ls --quiet | wc -l)"
echo "Running containers: $(docker ps --quiet | wc -l)"
echo "Docker networks: $(docker network ls --quiet | wc -l)"
echo "Docker volumes: $(docker volume ls --quiet | wc -l)"

echo ""
echo "Health check completed at $(date)"